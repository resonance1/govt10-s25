---
title: "Class 14"
format: docx
execute:
  error: TRUE
---

# Plan

* Interpreting regression coefficients
* Group Work 1 - Interpretation of regression coefficients
* Regression and Model Fit (lecture)
* Group Work 2 - Polling models and R^2

# Regression in R

```{r}
denmark <- read.csv("./class_data/denmark.csv")
afghan <- read.csv("./class_data/afghan.csv")

#download.file("https://github.com/resonance1/govt10-s25/blob/main/class_data/denmark.csv","denmark.csv")
#denmark<- read.csv("denmark.csv")

#download.file("https://raw.githubusercontent.com/resonance1/govt10-s25/refs/heads/main/class_data/afghan.csv","afghan.csv")
#afghan<- read.csv("afghan.csv")
```

Denmark Variables:

violentcrime_rate               Violent crime rate per 1000 people
pctforeign                      The % of residents who are non-citizens. Ranges from 0 to 1
lowincome_rate                  The % of residents who have low income. Ranges from 0 to 1

Regress _lowincome_rate_ (x) on _violentcrime_rate_ (y)

```{r}
x <- denmark$lowincome_rate
y <- denmark$violentcrime_rate

lm(y~x)
```

We can also use this syntax: 

```{r}
lm()
```


We can obtain the predictions from the regression model using predict()

```{r}
result <- lm(y~x)

```



# Group Work 1

1. Interpret the coefficients from the Danish regression above in real-world terms. 

For instance: "the intercept indicates that the expected level of violent crime if X is 0 is ? violent crimes per 1000 people. The slope coefficient indicates that for every increase of ? in X, Y is expected to increase by ?. " (fill in ?,X,Y)

*sentences here*

2. Let's visualize this regression. Run the following code:

```{r}
plot(x,y,ylab="Violent Crime Rate")
result <- lm(y ~ x)
abline(result)
```

How accurate do you think predictions from this regression would be? Does it look like a good fit?

*sentences here*


Afghan Variables:

educ.years                        Respondents' years of education
employed                          If respondents are employed (1) or not (0)
income                            Respondents' income range 

3.  Code a new binary variable in the afghan dataset called _nonresponse_ that receives a 1 if income is missing, and 0 otherwise --- remember that the function for this is: is.na() . 

```{r}

afghan <- afghan %>% mutate()

```

4. Then regress _educ.years_ (x) on _nonresponse_ (y) and interpret the coefficients.

```{r}

```

*sentences here*

5. Repeat by regressing _employed_ on _nonresponse_. Interpret the coefficients.

```{r}

```

*sentences here*


# Lecture: Regression and Model Fit

Viewing R^2 in R:

```{r}



```



# Group Work 2

In this group assignment, we will practice working more with polling datasets, using the 2008 election. This will help prepare you for this week's problem set, as well as the group election prediction exercise later in the term.

The code below pulls in 3 datasets:

polls08       Poll margins
intrade08     Betting margins
pres08        Actual results

Some researchers and observers argue that markets are more effective at estimating likely winners of states. They argue that individuals betting on election results have to place their own money on the line, which incentivizes careful analysis (i.e. "you can't beat the house in Vegas"). Also, betting results are available right up until the election date, unlike polls, which may have a lag of several days. In this exercise, we will compare the predictive power of these betting markets to polling results. 

```{r}
library(tidyverse)

pres08 <- read.csv("./class_data/pres08.csv")

#download.file("https://raw.githubusercontent.com/resonance1/govt10-s25/refs/heads/main/class_data/pres08.csv","pres08.csv")
#pres08 <- read.csv("pres08.csv")

polls08 <- read.csv("./class_data/polls08.csv") 

#download.file("https://raw.githubusercontent.com/resonance1/govt10-s25/refs/heads/main/class_data/polls08.csv","polls08.csv")
#polls08 <- read.csv("polls08.csv")

intrade08 <- read.csv("./class_data/intrade08.csv")

#download.file("https://raw.githubusercontent.com/resonance1/govt10-s25/refs/heads/main/class_data/intrade08.csv","intrade08.csv")
#intrade08 <- read.csv("intrade08.csv")


# No need to modify this code. It produces the variables "margin" in polls08, "actual.margin" in votes08, and "betting_margin" in intrade08

polls08$margin <- polls08$Obama - polls08$McCain
pres08$actual.margin <- pres08$Obama - pres08$McCain

intrade08$betting_margin <- intrade08$PriceD - intrade08$PriceR
intrade08$daysleft <- ymd("2008-11-04") - mdy(intrade08$day)
intrade08 <- intrade08 %>% filter(daysleft == 1)  # Filter to the day before the election
```

Test which approach provides the best R^2: averaging together state polls within 60 days of the election, vs. examining betting margins the day before the election.

To do this:
a. Create a subset of polls08 containing all polls with days.until <= 60
b. Use %>%group_by() %>% summarise() to average polls together by state
c. Join the dataframe from #2 to the pres08 dataset. 
d. With the dataframe from #3, fit a regression, where y is the actual margin of victory, and x is the polling average. Record the R^2
e. Merge the intrade08 dataset to your dataframe from #3, and run a regression, where y is the actual margin of victory, and x is the betting margin. Record the R^2. Are the betting margins less or more predictive than the polling margins? 
f. Interpret the coefficients for both regressions.


```{r}


```

```{r}

```

```{r}

```

# Optional Resources

Canvas > Files > Book Chapters > Data Analysis, Chapter 4 > Section 4.6

## Check-in

1. On a scale ranging between 1 (Too Hard) and 10 (Too Easy), how was today's class: 
2. What was the easiest thing to understand?
3. What was the most difficult thing to understand?

